{
  "__inputs": [
    {
      "name": "DS_INFLUXDB",
      "label": "InfluxDB",
      "description": "",
      "type": "datasource",
      "pluginId": "influxdb",
      "pluginName": "InfluxDB"
    }
  ],
  "__elements": [],
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "8.3.3"
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1642587316077,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 5,
      "panels": [],
      "title": "Interface statistics",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.device}:${__field.labels./interfaces/interface/@name}:${__field.name}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "pps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 0,
        "y": 1
      },
      "id": 3,
      "interval": "5m",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "hidden",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "out_dir = from(bucket: \"telemetry\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/interfaces/\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/@name\"] =~ /${if_name:regex}/)\n  |> filter(fn: (r) => r[\"device\"] == \"${host_regex}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/interfaces/interface/state/counters/out-pkts\")\n  |> derivative(unit: 1s, nonNegative: true)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean)\n  |> set(key: \"_field\", value: \"OUT\")\n  \nin_dir = from(bucket: \"telemetry\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/interfaces/\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/@name\"] =~ /${if_name:regex}/)\n  |> filter(fn: (r) => r[\"device\"] == \"${host_regex}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/interfaces/interface/state/counters/in-pkts\")\n  |> derivative(unit: 1s, nonNegative: true)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean)\n  |> set(key: \"_field\", value: \"IN\")\n\n  union(tables: [out_dir, in_dir])\n    |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Traffic statistics (pps)",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.device}:${__field.labels./interfaces/interface/@name}:${__field.name}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "Bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 12,
        "y": 1
      },
      "id": 2,
      "interval": "5m",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "hidden",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "out_dir = from(bucket: \"telemetry\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/interfaces/\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/@name\"] =~ /${if_name:regex}/)\n  |> filter(fn: (r) => r[\"device\"] == \"${host_regex}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/interfaces/interface/state/counters/out-octets\")\n  |> derivative(unit: 1s, nonNegative: true)\n  |> map(fn: (r) => ({\n    r with \n    _value: r._value * 8.0\n  })\n  ) \n  |> aggregateWindow(every: v.windowPeriod, fn: mean)\n  |> set(key: \"_field\", value: \"OUT\")\n\n  in_dir = from(bucket: \"telemetry\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/interfaces/\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/@name\"] =~ /${if_name:regex}/)\n  |> filter(fn: (r) => r[\"device\"] == \"${host_regex}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/interfaces/interface/state/counters/in-octets\")\n  |> derivative(unit: 1s, nonNegative: true)\n  |> map(fn: (r) => ({\n    r with \n    _value: r._value * 8.0\n  })\n  ) \n  |> aggregateWindow(every: v.windowPeriod, fn: mean)\n  |> set(key: \"_field\", value: \"IN\")\n\nunion(tables: [out_dir, in_dir])\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Traffic statistics (Bps)",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "alias": "GR-IX OUT",
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "OUT {/interfaces/interface/@name=\"et-0/0/0\", device=\"91.220.131.1\", host=\"9bff571e5e21\", name=\"/interfaces/\", path=\"sensor_1014_1_3:/junos/system/linecard/interface/traffic/:/interfaces/:PFE\", system_id=\"grixr1\"}",
                "OUT {/interfaces/interface/@name=\"et-0/0/3\", device=\"91.220.131.1\", host=\"9bff571e5e21\", name=\"/interfaces/\", path=\"sensor_1014_1_3:/junos/system/linecard/interface/traffic/:/interfaces/:PFE\", system_id=\"grixr1\"}"
              ],
              "reducer": "sum"
            }
          }
        }
      ],
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.device}:${__field.labels./interfaces/interface/@name}:${__field.name}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 0,
        "y": 13
      },
      "id": 12,
      "interval": "5m",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "hidden",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: \"telemetry\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/interfaces/\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/@name\"] =~ /${if_name:regex}/)\n  |> filter(fn: (r) => r[\"device\"] == \"${host_regex}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/interfaces/interface/ethernet/state/counters/in-crc-errors\" or r[\"_field\"] == \"/interfaces/interface/ethernet/state/counters/in-block-errors\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean)\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Traffic statistics errors",
      "transformations": [],
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.device}:${__field.labels./interfaces/interface/@name}:${__field.name}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "pps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 12,
        "y": 13
      },
      "id": 11,
      "interval": "5m",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "hidden",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "unicast = from(bucket: \"telemetry\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/interfaces/\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/@name\"] =~ /${if_name:regex}/)\n  |> filter(fn: (r) => r[\"device\"] == \"${host_regex}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/interfaces/interface/state/counters/out-unicast-pkts\")\n  |> derivative(unit: 1s, nonNegative: true)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n\nmulticast = from(bucket: \"telemetry\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/interfaces/\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/@name\"] =~ /${if_name:regex}/)\n  |> filter(fn: (r) => r[\"device\"] == \"${host_regex}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/interfaces/interface/state/counters/out-multicast-pkts\")\n  |> derivative(unit: 1s, nonNegative: true)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n\nbroadcast = from(bucket: \"telemetry\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/interfaces/\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/@name\"] =~ /${if_name:regex}/)\n  |> filter(fn: (r) => r[\"device\"] == \"${host_regex}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/interfaces/interface/state/counters/out-broadcast-pkts\")\n  |> derivative(unit: 1s, nonNegative: true)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean)\n\n  union(tables: [unicast, multicast, broadcast])\n    |> yield(name: \"last\")\n",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "unicast = from(bucket: \"telemetry\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/interfaces/\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/@name\"] =~ /${if_name:regex}/)\n  |> filter(fn: (r) => r[\"device\"] == \"${host_regex}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/interfaces/interface/state/counters/in-unicast-pkts\")\n  |> derivative(unit: 1s, nonNegative: true)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n\nmulticast = from(bucket: \"telemetry\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/interfaces/\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/@name\"] =~ /${if_name:regex}/)\n  |> filter(fn: (r) => r[\"device\"] == \"${host_regex}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/interfaces/interface/state/counters/in-multicast-pkts\")\n  |> derivative(unit: 1s, nonNegative: true)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n\nbroadcast = from(bucket: \"telemetry\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/interfaces/\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/@name\"] =~ /${if_name:regex}/)\n  |> filter(fn: (r) => r[\"device\"] == \"${host_regex}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/interfaces/interface/state/counters/in-broadcast-pkts\")\n  |> derivative(unit: 1s, nonNegative: true)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean)\n\n  union(tables: [unicast, multicast, broadcast])\n    |> yield(name: \"last\")\n",
          "refId": "B"
        }
      ],
      "title": "Traffic statistics - Unicast/Multicast/Broadcast packets",
      "transformations": [],
      "transparent": true,
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 25
      },
      "id": 7,
      "panels": [],
      "title": "Interface queue",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${host_regex}-${if_name}-queue:${__field.labels./interfaces/interface/state/counters/out-queue/@queue-number}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "pps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 0,
        "y": 26
      },
      "id": 10,
      "interval": "5m",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "hidden",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: \"telemetry\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/interfaces/\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/@name\"] =~ /${if_name:regex}/)\n  |> filter(fn: (r) => r[\"device\"] == \"${host_regex}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/interfaces/interface/state/counters/out-queue/pkts\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/state/counters/out-queue/@queue-number\"] =~ /${queue:regex}/)\n  |> derivative(unit: 1s, nonNegative: true)\n    |> map(fn: (r) => ({\n    r with \n    _value: r._value * 8.0\n  })\n  )\n  |> aggregateWindow(every: v.windowPeriod, fn: mean)\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Interface queue stats (pps)",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${host_regex}-${if_name}-queue:${__field.labels./interfaces/interface/state/counters/out-queue/@queue-number}",
          "links": [],
          "mappings": [],
          "min": 1,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 12,
        "y": 26
      },
      "id": 8,
      "interval": "5m",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "hidden",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: \"telemetry\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/interfaces/\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/@name\"] =~ /${if_name:regex}/)\n  |> filter(fn: (r) => r[\"device\"] == \"${host_regex}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/interfaces/interface/state/counters/out-queue/bytes\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/state/counters/out-queue/@queue-number\"] =~ /${queue:regex}/)\n  |> derivative(unit: 1s, nonNegative: true)\n    |> map(fn: (r) => ({\n    r with \n    _value: r._value * 8.0,\n  })\n  )\n  |> aggregateWindow(every: v.windowPeriod, fn: mean)\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Interface queue stats (Bps)",
      "transformations": [],
      "transparent": true,
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 38
      },
      "id": 14,
      "panels": [],
      "title": "Interface buffers",
      "type": "row"
    },
    {
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.device}-${__field.labels./interfaces/interface/@name}-queue:${__field.labels./interfaces/interface/state/counters/out-queue/@queue-number}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 39
      },
      "id": 16,
      "interval": "5m",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "hidden",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: \"telemetry\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/interfaces/\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/@name\"] =~ /${if_name:regex}/)\n  |> filter(fn: (r) => r[\"device\"] == \"${host_regex}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/interfaces/interface/state/counters/out-queue/avg-buffer-occupancy\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/state/counters/out-queue/@queue-number\"] =~ /${queue:regex}/)\n  |> aggregateWindow(every: v.windowPeriod, fn: last)\n  |> yield(name: \"last\")\n  |> group(columns: [\"device\", \"/interfaces/interface/@name\", \"/interfaces/interface/state/counters/out-queue/@queue-number\"])",
          "refId": "A"
        }
      ],
      "title": "Interface Buffer occupancy (average)",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.device}-${__field.labels./interfaces/interface/@name}-queue:${__field.labels./interfaces/interface/state/counters/out-queue/@queue-number}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 8,
        "y": 39
      },
      "id": 17,
      "interval": "5m",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "hidden",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: \"telemetry\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/interfaces/\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/@name\"] =~ /${if_name:regex}/)\n  |> filter(fn: (r) => r[\"device\"] == \"${host_regex}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/interfaces/interface/state/counters/out-queue/cur-buffer-occupancy\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/state/counters/out-queue/@queue-number\"] =~ /${queue:regex}/)\n  |> aggregateWindow(every: v.windowPeriod, fn: last)\n  |> yield(name: \"last\")\n  |> group(columns: [\"device\", \"/interfaces/interface/@name\", \"/interfaces/interface/state/counters/out-queue/@queue-number\"])",
          "refId": "A"
        }
      ],
      "title": "Interface Buffer occupancy (current)",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.device}-${__field.labels./interfaces/interface/@name}-queue:${__field.labels./interfaces/interface/state/counters/out-queue/@queue-number}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 16,
        "y": 39
      },
      "id": 18,
      "interval": "5m",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "hidden",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: \"telemetry\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/interfaces/\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/@name\"] =~ /${if_name:regex}/)\n  |> filter(fn: (r) => r[\"device\"] == \"${host_regex}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/interfaces/interface/state/counters/out-queue/peak-buffer-occupancy\")\n  |> filter(fn: (r) => r[\"/interfaces/interface/state/counters/out-queue/@queue-number\"] =~ /${queue:regex}/)\n  |> aggregateWindow(every: v.windowPeriod, fn: last)\n  |> yield(name: \"last\")\n  |> group(columns: [\"device\", \"/interfaces/interface/@name\", \"/interfaces/interface/state/counters/out-queue/@queue-number\"])",
          "refId": "A"
        }
      ],
      "title": "Interface Buffer occupancy (peak)",
      "transparent": true,
      "type": "timeseries"
    }
  ],
  "refresh": "1m",
  "schemaVersion": 34,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "import \"influxdata/influxdb/schema\"\n\nschema.measurementTagValues(\n  bucket: \"telemetry\",\n  measurement: \"/interfaces/\",\n  tag: \"device\"\n)",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "host_regex",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\n\nschema.measurementTagValues(\n  bucket: \"telemetry\",\n  measurement: \"/interfaces/\",\n  tag: \"device\"\n)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "import \"influxdata/influxdb/v1\"\n\nv1.tagValues(\n    bucket: \"telemetry\",\n    tag: \"/interfaces/interface/@name\",\n    predicate: (r) => r.device == \"${host_regex}\",\n    start: -1d\n)\n",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "if_name",
        "options": [],
        "query": "import \"influxdata/influxdb/v1\"\n\nv1.tagValues(\n    bucket: \"telemetry\",\n    tag: \"/interfaces/interface/@name\",\n    predicate: (r) => r.device == \"${host_regex}\",\n    start: -1d\n)\n",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "allValue": ".*",
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "import \"influxdata/influxdb/v1\"\n\nv1.tagValues(\n    bucket: \"telemetry\",\n    tag: \"/interfaces/interface/state/counters/out-queue/@queue-number\",\n    predicate: (r) => r.device == \"${host_regex}\",\n    start: -1d\n)\n",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "queue",
        "options": [],
        "query": "import \"influxdata/influxdb/v1\"\n\nv1.tagValues(\n    bucket: \"telemetry\",\n    tag: \"/interfaces/interface/state/counters/out-queue/@queue-number\",\n    predicate: (r) => r.device == \"${host_regex}\",\n    start: -1d\n)\n",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": "InfluxDB",
          "value": "InfluxDB"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "DB",
        "options": [],
        "query": "influxdb",
        "queryValue": "",
        "refresh": 1,
        "regex": "InfluxDB",
        "skipUrlSync": false,
        "type": "datasource"
      }
    ]
  },
  "time": {
    "from": "now-12h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Interface statistics",
  "uid": "RW38RV0nk",
  "version": 31,
  "weekStart": ""
}